<div class="columns">
  <div class="column is-four-fifths" %>
    <%= erb :'countings/_occurrences.html', layout: false %>
  </div>

  <div class="column">
    <%= erb :'countings/_sections_and_samples.html', layout: false %>
  </div>
</div>

<script type="module">
  import { DomHelpers } from '/js/dom_helpers.js';
  import { OccurrenceSpeciesDialog } from '/js/occurrence_species_dialog.js';
  import { OccurrenceRequest, SectionRequest } from '/js/requests.js';
  import { OccurrencesCollection } from '/js/occurrences_collection.js';
  import { SpeciesModalFormView } from '/js/modal_form_views.js';
  import { UrlParamsUpdater } from '/js/url_params_updater.js';

  $(function() {
    const projectId = <%= @project.id %>;
    const countingId = <%= @counting.id %>;
    let sectionId = null;
    let sampleId = null;
    <% if @section %>
      sectionId = <%= @section.id %>;
    <% end %>
    <% if @sample %>
      sampleId = <%= @sample.id %>;
    <% end %>
    const countingGroupId = <%= @counting.group_id.to_json %>;
    var speciesSearch = null;

    const occurrencesCollection = new OccurrencesCollection(
      projectId,
      '#occurrences-collection',
      '#occurrences-summary'
    );

    if (sectionId && sampleId) {
      occurrencesCollection.show();
      occurrencesCollection.loadOccurrences(countingId, sectionId, sampleId);
    }

    const addOccurrence = function(speciesId, countingId, sampleId) {
      const attrs = {
        species_id: speciesId,
        counting_id: countingId,
        sample_id: sampleId,
      };
      new OccurrenceRequest(projectId).save(attrs).then(
        result => {
          occurrencesCollection.addOccurrence(result.occurrence);
        },
        errors => {
          console.log(errors);
          //window.location.reload();
        }
      )
    }

    document.querySelector('.button.add-occurrence').addEventListener('click', () => {
      const dialog = new OccurrenceSpeciesDialog('.modal.add-occurrence');
      dialog.show({ countingGroupId: countingGroupId }).then((speciesId) => {
        console.log(`${speciesId}:${countingId}:${sampleId}`);
        addOccurrence(speciesId, countingId, sampleId);
      })
    });

    // Selecting section and sample
    document.querySelectorAll('.select-section.action').forEach((element) => {
      element.addEventListener('click', (event) => {
        let sectionId = event.target.getAttribute('data-section-id');
        event.preventDefault();
        new UrlParamsUpdater().setParams({ section: sectionId });
        document.querySelectorAll('.sections-list .section').forEach((element) => {
          element.classList.remove('is-selected')
        });
        event.target.parentElement.classList.add('is-selected');

        new SectionRequest().get(sectionId).then(
          result => {
            let section = result.section

            let sectionSamplesElement = document.querySelector('.samples-list tbody')
            sectionSamplesElement.innerHTML = '';
            section.samples.forEach((sample, i) => {
              let template = DomHelpers.buildFromTemplate('section-sample-template')
              DomHelpers.setText(sample.name, '.select-sample', template)
              DomHelpers.setAttr('data-sample-id', sample.id, '.select-sample', template)

              template.querySelector('.select-sample.action').addEventListener('click', (event) => {
                event.preventDefault();
                new UrlParamsUpdater().setParams({
                  section: section.id,
                  sample: sample.id,
                });
                document.querySelectorAll('.samples-list .sample').forEach((element) => {
                  element.classList.remove('is-selected')
                });
                event.target.parentElement.classList.add('is-selected');

                occurrencesCollection.show();
                occurrencesCollection.loadOccurrences(countingId, section.id, sample.id)
              })

              sectionSamplesElement.append(template)
            })
          },
          errors => {
            console.log(errors)
          }
        )
      });
    });

    const species = {
      name: null,
      group_id: null,
      //description: null,
      //environmental_preferences: null,
      //verified: false,
    }

    $('.add-species.action').click(() => {
      new SpeciesModalFormView(species, (result) => {
        addOccurrence(result.species.id, countingId, sampleId)
      }).show()
    });
  })
</script>
