<table class="ui collapsing compact celled table occurrences-summary">
  <thead>
    <tr>
      <th>Counted</th>
      <th>Other</th>
      <th>Total</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><span id="occurrences-countable-sum"></span></td>
      <td><span id="occurrences-uncountable-sum"></span></td>
      <td class="active"><span id="occurrences-total-sum"></span></td>
    </tr>
  </tbody>
</table>

<template id="occurrence-template">
  <tr class="occurrence" data-occurrence-id="">
    <td class="occurrence-group-name"></td>
    <td class="occurrence-species-name"></td>
    <td class="occurrence-quantity"></td>
    <td>
      <div class="ui vertical mini icon buttons">
        <button class="ui button increase-quantity" data-shift="1"><i class="plus icon"></i></button>
        <button class="ui button decrease-quantity" data-shift="-1"><i class="minus icon"></i></button>
      </div>
    </td>
    <td class="ui form field">
      <select class="occurrence-status update-status" name="occurrence-status">
        <% Paleolog::CountingSummary::STATUSES.each do |value, symbol| %>
          <option value="<%= value %>"><%= symbol %></option>
        <% end %>
      </select>
    </td>
    <td class="ui form field">
      <input class="occurrence-uncertain update-uncertain" name="occurrence-uncertain" type="checkbox" />
    </td>
    <td><button class="ui negative mini icon button delete-occurrence"><i class="trash icon"></i></button>
  </tr>
</template>

<table class="ui striped celled table">
  <thead>
    <tr align="center">
      <th>Group</th>
      <th>Species</th>
      <th colspan="2">Quantity</th>
      <th>Status</th>
      <th>Uncertain</th>
      <th></th>
    </tr>
  </thead>
  <tbody id="occurrences-collection">
    <tr>
      <td colspan="7">
        <button class="ui fluid mini icon primary button add-occurrence"><i class="plus icon"></i></button>
      </td>
    </tr>
  </tbody>
</table>
<div class="ui modal add-occurrence">
  <div class="header">Add Species</div>
  <div class="content">
    <%= erb :'species/_search.html', layout: false %>
  </div>
  <div class="actions">
    <div class="ui cancel button">Cancel</div>
  </div>
</div>

<script type="text/javascript">
$(function() {
  const projectId = <%= @project.id %>;
  const sectionId = <%= @section.id %>;
  const countingId = <%= @counting.id %>;
  const sampleId = <%= @sample.id %>;
  const countingGroupId = <%= @counting.group_id.to_json %>;
  var speciesSearch = null;

  loadOccurrences = function() {
    var actionUrl = "/api/projects/" + projectId + "/occurrences";
    attrs = {
      counting_id: countingId,
      section_id: sectionId,
      sample_id: sampleId,
    };
    $.ajax({
      url: actionUrl,
      data: attrs,
      type: "GET",
      dataType: "json",
    })
    .done(function(json) {
      json.occurrences.reverse().forEach(occurrence => {
        var element = $($("#occurrence-template").html());
        element.attr("data-occurrence-id", occurrence.id);

        element.find(".occurrence-group-name").text(occurrence.group_name);
        element.find(".occurrence-species-name").text(occurrence.species_name);
        element.find(".occurrence-quantity").text(occurrence.quantity);
        element.find(".occurrence-status").val(occurrence.status);
        element.find(".occurrence-uncertain").prop('checked', occurrence.uncertain);

        element.find(".increase-quantity").click(function() {
          updateOccurrence(occurrenceIdFor($(this)), { shift: 1 });
        });
        element.find(".decrease-quantity").click(function() {
          updateOccurrence(occurrenceIdFor($(this)), { shift: -1 });
        });
        element.find(".update-status").change(function() {
          var status = $(this).val();
          updateOccurrence(occurrenceIdFor($(this)), { status: status });
        });
        element.find(".update-uncertain").change(function() {
          var uncertain;
          if($(this).prop("checked")) {
            uncertain = true
          } else {
            uncertain = false
          };
          updateOccurrence(occurrenceIdFor($(this)), { uncertain: uncertain });
        });
        element.find('.delete-occurrence').click(function() {
          removeOccurrence(occurrenceIdFor($(this)));
        });

        $('#occurrences-collection').prepend(element);
      });
      updateSummary(json.summary);
    }).fail(function(xhr, status, error) {
      alert('Please refresh the page and try again.')
    })

  }

  removeOccurrence = function(occurrenceId) {
    var actionUrl = "/api/projects/" + projectId + "/occurrences/" + occurrenceId;
    $.ajax({
      url: actionUrl,
      type: "DELETE",
      dataType: "json",
    })
    .done(function(json) {
      occurrenceElementFor(json.occurrence.id).remove();
      updateSummary(json.summary);
    }).fail(function(xhr, status, error) {
      alert('Please refresh the page and try again.')
    })
  }

  addOccurrence = function(speciesId, countingId, sampleId) {
    var actionUrl = "/api/projects/" + projectId + "/occurrences";
    attrs = {
      species_id: speciesId,
      counting_id: countingId,
      sample_id: sampleId,
    };
    $.ajax({
      url: actionUrl,
      data: attrs,
      type: "POST",
      dataType: "json",
    })
    .done(function(json) {
      $('.modal.add-occurrence').modal('hide');
      // TODO: add it to the displayed collection instead of reloading
      window.location.reload();
    }).fail(function(xhr, status, error) {
      alert('Please refresh the page and try again.')
    })
  }

  updateOccurrence = function(occurrence_id, attrs) {
    var actionUrl = "/api/projects/" + projectId + "/occurrences/" + occurrence_id;
    $.ajax({
      url: actionUrl,
      data: attrs,
      type: "PATCH",
      dataType: "json",
    })
    .done(function(json) {
      occurrenceElementFor(json.occurrence.id).find(".occurrence-quantity").text(json.occurrence.quantity);
      updateSummary(json.summary);
    }).fail(function(xhr, status, error) {
      alert('Please refresh the page and try again.')
    })
  }

  updateSummary = function(summary) {
    $("#occurrences-uncountable-sum").text(summary.uncountable);
    $("#occurrences-countable-sum").text(summary.countable);
    $("#occurrences-total-sum").text(summary.total);
  }

  occurrenceIdFor = function(element) {
    return element.parents(".occurrence").attr("data-occurrence-id");
  }

  occurrenceElementFor = function(id) {
    return $(".occurrence[data-occurrence-id='" + id + "']");
  }

  $('.button.add-occurrence').click(function() {
    $('.modal.add-occurrence').modal('show');
    // TODO: exclude already present in counting
    if(!speciesSearch) {
      speciesSearch = new SpeciesSearch({
        onSpeciesSelected: function(speciesId) {
          addOccurrence(speciesId, countingId, sampleId)
        },
        updatePath: false,
        initialFilter: countingGroupId ? { group_id: countingGroupId } : {},
      });
    }
  });

  loadOccurrences();
})
</script>
