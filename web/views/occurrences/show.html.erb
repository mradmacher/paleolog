<table class="ui collapsing compact celled table occurrences-summary">
  <thead>
    <tr>
      <th>Counted</th>
      <th>Other</th>
      <th>Total</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><span id="occurrences-countable-sum"></span></td>
      <td><span id="occurrences-uncountable-sum"></span></td>
      <td class="active"><span id="occurrences-total-sum"></span></td>
    </tr>
  </tbody>
</table>

<%= erb :'occurrences/_occurrence.html', layout: false %>

<table class="ui striped celled table">
  <thead>
    <tr align="center">
      <th>Group</th>
      <th>Species</th>
      <th colspan="2">Quantity</th>
      <th>Status</th>
      <th>Uncertain</th>
      <th></th>
    </tr>
  </thead>
  <tbody id="occurrences-collection">
    <tr>
      <td colspan="7">
        <button class="ui fluid mini icon secondary button add-occurrence"><i class="plus icon"></i></button>
      </td>
    </tr>
  </tbody>
</table>

<div class="ui modal add-occurrence">
  <div class="header">Add Species</div>
  <div class="content">
    <div class="ui grid">
      <div class="sixteen wide column">
        <fieldset class="ui grid">
          <div class="fourteen wide column">
            <h1 class="ui header">Species list (<span id="search-species-size"></span>)</h1>
          </div>
          <div class="two wide column">
            <button class="ui mini secondary button add-species action">Add</button>
          </div>
        </fieldset>
      </div>

      <div class="three wide column">
        <%= erb :'species/_search.html', layout: false %>
      </div>

      <div class="thirteen wide column scrolling content">
        <template id="search-species-template">
          <tr class="species">
            <td class="species-name"></td>
            <td class="species-group-name"></td>
            <td>
              <button class="ui button select-species-action"><i class="right arrow icon"></i></button>
            </td>
          </tr>
        </template>
        <table id="species-list" class="ui celled table">
          <thead>
            <tr>
              <th>Species</th>
              <th>Group</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
          </tbody>
        </table>
      </div>

    </div>
  </div>
  <div class="actions">
    <div class="ui cancel button">Cancel</div>
  </div>
</div>

<script type="text/javascript">
$(function() {
  const projectId = <%= @project.id %>;
  const sectionId = <%= @section.id %>;
  const countingId = <%= @counting.id %>;
  const sampleId = <%= @sample.id %>;
  const countingGroupId = <%= @counting.group_id.to_json %>;
  var speciesSearch = null;

  loadOccurrences = function() {
    attrs = {
      counting_id: countingId,
      section_id: sectionId,
      sample_id: sampleId,
    };

    new OccurrenceRequest(projectId).index(attrs).then(result => {
      result.occurrences.reverse().forEach(occurrence => {
        $('#occurrences-collection').prepend(
          buildOccurrenceRow(occurrence, {
            onUpdate: (occurrence, summary) => {
              updateSummary(summary)
            },
            onRemove: (occurrence, summary) => {
              occurrenceElementFor(occurrence.id).remove();
              updateSummary(summary);
            },
          })
        );
      })
      updateSummary(result.summary)
    });
  }

  addOccurrence = function(speciesId, countingId, sampleId) {
    var actionUrl = "/api/projects/" + projectId + "/occurrences";
    attrs = {
      species_id: speciesId,
      counting_id: countingId,
      sample_id: sampleId,
    };
    new OccurrenceRequest(projectId).save(attrs).then(
      result => {
        $('.modal.add-occurrence').modal('hide');
        // TODO: add it to the displayed collection instead of reloading
        window.location.reload();
      },
      errors => {
        alert('Please refresh the page and try again.')
      }
    )
  }

  updateSummary = function(summary) {
    $("#occurrences-uncountable-sum").text(summary.uncountable);
    $("#occurrences-countable-sum").text(summary.countable);
    $("#occurrences-total-sum").text(summary.total);
  }

  occurrenceIdFor = function(element) {
    return element.parents(".occurrence").attr("data-occurrence-id");
  }

  occurrenceElementFor = function(id) {
    return $(".occurrence[data-occurrence-id='" + id + "']");
  }

  showSearchResult = function(result) {
    $('#species-list tbody').empty();
    $('#search-species-size').text(result.result.length);
    var that = this;
    result.result.forEach(species => {
      var element = $($('#search-species-template').html());
      element.find('.species-name').text(species.name);
      element.find('.species-group-name').text(species.group_name);
      element.find('.select-species-action').click(function(event) {
        addOccurrence(species.id, countingId, sampleId)
      });
      $('#species-list tbody').append(element);
    });
  }

  $('.button.add-occurrence').click(function() {
    $('.modal.add-occurrence').modal('show');
    // TODO: exclude already present in counting
    if(!speciesSearch) {
      speciesSearch = new SpeciesSearch({
        onSpeciesSelected: function(speciesId) {
          addOccurrence(speciesId, countingId, sampleId)
        },
        onSpeciesSearched: function(result) {
          showSearchResult(result)
        },
        updatePath: false,
        initialFilter: countingGroupId ? { group_id: countingGroupId } : {},
      });
    }
  });

  loadOccurrences();

  const species = {
    name: null,
    group_id: null,
    //description: null,
    //environmental_preferences: null,
    //verified: false,
  }

  $('.add-species.action').click(() => {
    new SpeciesModalFormView(species, (result) => {
      addOccurrence(result.species.id, countingId, sampleId)
    }).show()
  });
})
</script>
