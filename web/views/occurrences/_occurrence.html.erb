<template id="occurrence-template">
  <tr class="occurrence" data-occurrence-id="">
    <td class="occurrence-group-name"></td>
    <td class="occurrence-species-name"></td>
    <td class="occurrence-quantity"></td>
    <td>
      <div class="ui horizontal icon buttons">
        <button class="ui button increase-quantity" data-shift="1"><i class="plus icon"></i></button>
        <button class="ui button set-quantity"><i class="edit icon"></i></button>
      </div>
    </td>
    <td class="ui form field">
      <select class="occurrence-status update-status" name="occurrence-status">
        <% Paleolog::CountingSummary::STATUSES.each do |value, symbol| %>
          <option value="<%= value %>"><%= symbol %></option>
        <% end %>
      </select>
    </td>
    <td class="ui form field">
      <input class="occurrence-uncertain update-uncertain" name="occurrence-uncertain" type="checkbox" />
    </td>
    <td><button class="ui negative mini icon button delete-occurrence"><i class="trash icon"></i></button>
  </tr>
</template>

<div class="ui modal set-quantity">
  <div class="header">Set Quantity</div>
  <div class="content">
    <div class="ui form field">
      <label for="occurrence-quantity"><span class="species-name"></span> - <span class="group-name"></span></label>
      <input class="occurrence-quantity" name="occurrence-quantity" type="number" min="0" />
    </div>
  </div>
  <div class="actions">
    <button class="ui approve button">Save</button>
    <button class="ui cancel button">Cancel</button>
  </div>
</div>

<script type="text/javascript">
$(function() {
  const projectId = <%= @project.id %>;

  updateOccurrence = function(occurrenceId, attrs, callback) {
    new OccurrenceRequest(projectId).save({ ...attrs, ...{ id: occurrenceId }}).then(result => {
      occurrenceElementFor(result.occurrence.id).find(".occurrence-quantity").text(result.occurrence.quantity);
      callback(result.occurrence, result.summary)
    }).catch(errors => {
      alert('Please refresh the page and try again.')
    })
  }

  removeOccurrence = function(occurrenceId, callback) {
    new OccurrenceRequest(projectId).remove(occurrenceId).then(result => {
      callback(result.occurrence, result.summary)
    }).catch(errors => {
      alert('Please refresh the page and try again.')
    })
  }

  buildOccurrenceRow = function(occurrence, { onUpdate, onRemove } = {}) {
    var element = $($("#occurrence-template").html());
    element.attr("data-occurrence-id", occurrence.id);

    element.find(".occurrence-group-name").text(occurrence.group_name);
    element.find(".occurrence-species-name").text(occurrence.species_name);
    element.find(".occurrence-quantity").text(occurrence.quantity);
    element.find(".occurrence-status").val(occurrence.status);
    element.find(".occurrence-uncertain").prop('checked', occurrence.uncertain);

    element.find(".increase-quantity").click(function() {
      updateOccurrence(occurrence.id, { shift: 1 }, onUpdate);
    });
    element.find('.set-quantity').click(function() {
      const modal = $('.modal.set-quantity');
      modal.find('.species-name').text(occurrence.species_name);
      modal.find('.group-name').text(occurrence.group_name);
      const quantityElement = modal.find('.occurrence-quantity')
      quantityElement.val(element.find(".occurrence-quantity").text());
      modal.modal({
        onApprove: function() {
          if (Number.isInteger(parseInt(quantityElement.val()))) {
            updateOccurrence(occurrence.id, { quantity: quantityElement.val() }, onUpdate);
          } else {
            alert("Please enter a number.");
            return false
          }
        }
      })
      modal.modal('show');
    });
    element.find(".update-status").change(function() {
      var status = $(this).val();
      updateOccurrence(occurrence.id, { status: status }, onUpdate);
    });
    element.find(".update-uncertain").change(function() {
      var uncertain;
      if($(this).prop("checked")) {
        uncertain = true
      } else {
        uncertain = false
      };
      updateOccurrence(occurrence.id, { uncertain: uncertain }, onUpdate);
    });
    element.find('.delete-occurrence').click(function() {
      text = 'Do you confirm removing this occurrence?'
      if (confirm(text) == true) {
        removeOccurrence(occurrence.id, onRemove);
      }
    });

    return element;
  }
})
</script>
